#ifndef BIG_CORDIC_H
#define BIG_CORDIC_H
#include "big.cpp"
#define BCORDIC_BASE_400
/**If variable is defined, Base 400 is used, otherwise Base 64*/
#ifndef BCORDIC_BASE_400
/**
 * @brief Base of cordic algorithm. Can be 64 or 400. Default is 64, but if you define BCORDIC_BASE_400 it gets set to 400.
 * 
 */
inline int BCORDIC_BASE = 64;

inline int FLOATING_POINT_DEC_PREC = 20;
/**
 * @brief Atan(1/2^i)
 * 
 */
inline const bigreal BCORDIC_ATAN[65] = {bigreal("9223372036854775808"),
                            bigreal("5444874448539492761"),
                            bigreal("2876922122323524151"),
                            bigreal("1460370590102087790"),
                            bigreal("733019165973179315"),
                            bigreal("366866921168144865"),
                            bigreal("183478225930852518"),
                            bigreal("91744711707003579"),
                            bigreal("45873055792303324"),
                            bigreal("22936615391505631"),
                            bigreal("11468318632765934"),
                            bigreal("5734160683512540"),
                            bigreal("2867080512647558"),
                            bigreal("1433540277685193"),
                            bigreal("716770141512773"),
                            bigreal("358385071090159"),
                            bigreal("179192535586801"),
                            bigreal("89596267798616"),
                            bigreal("44798133899960"),
                            bigreal("22399066950061"),
                            bigreal("11199533475041"),
                            bigreal("5599766737522"),
                            bigreal("2799883368761"),
                            bigreal("1399941684381"),
                            bigreal("699970842190"),
                            bigreal("349985421095"),
                            bigreal("174992710548"),
                            bigreal("87496355274"),
                            bigreal("43748177637"),
                            bigreal("21874088818"),
                            bigreal("10937044409"),
                            bigreal("5468522205"),
                            bigreal("2734261102"),
                            bigreal("1367130551"),
                            bigreal("683565276"),
                            bigreal("341782638"),
                            bigreal("170891319"),
                            bigreal("85445659"),
                            bigreal("42722830"),
                            bigreal("21361415"),
                            bigreal("10680707"),
                            bigreal("5340354"),
                            bigreal("2670177"),
                            bigreal("1335088"),
                            bigreal("667544"),
                            bigreal("333772"),
                            bigreal("166886"),
                            bigreal("83443"),
                            bigreal("41722"),
                            bigreal("20861"),
                            bigreal("10430"),
                            bigreal("5215"),
                            bigreal("2608"),
                            bigreal("1304"),
                            bigreal("652"),
                            bigreal("326"),
                            bigreal("163"),
                            bigreal("81"),
                            bigreal("41"),
                            bigreal("20"),
                            bigreal("10"),
                            bigreal("5"),
                            bigreal("3"),
                            bigreal("1"),
                            bigreal("1")};

inline const bigreal BCORDIC_INITIAL_POINT = bigreal("11201839480117811816");
inline const bigreal BCORDIC_HYPERBOLIC_INITIAL_POINT = bigreal("22230841978184165038");
inline const bigreal BCORDIC_ARC_INITIAL_POINT = bigreal("11201839480117811816");
/**
 * @brief 2^i
 * 
 */ 
inline const bigreal BIG_POWERSOF2[65] = {bigreal("1"),bigreal("2"),
                                    bigreal("4"),
                                    bigreal("8"),
                                    bigreal("16"),
                                    bigreal("32"),
                                    bigreal("64"),
                                    bigreal("128"),
                                    bigreal("256"),
                                    bigreal("512"),
                                    bigreal("1024"),
                                    bigreal("2048"),
                                    bigreal("4096"),
                                    bigreal("8192"),
                                    bigreal("16384"),
                                    bigreal("32768"),
                                    bigreal("65536"),
                                    bigreal("131072"),
                                    bigreal("262144"),
                                    bigreal("524288"),
                                    bigreal("1048576"),
                                    bigreal("2097152"),
                                    bigreal("4194304"),
                                    bigreal("8388608"),
                                    bigreal("16777216"),
                                    bigreal("33554432"),
                                    bigreal("67108864"),
                                    bigreal("134217728"),
                                    bigreal("268435456"),
                                    bigreal("536870912"),
                                    bigreal("1073741824"),
                                    bigreal("2147483648"),
                                    bigreal("4294967296"),
                                    bigreal("8589934592"),
                                    bigreal("17179869184"),
                                    bigreal("34359738368"),
                                    bigreal("68719476736"),
                                    bigreal("137438953472"),
                                    bigreal("274877906944"),
                                    bigreal("549755813888"),
                                    bigreal("1099511627776"),
                                    bigreal("2199023255552"),
                                    bigreal("4398046511104"),
                                    bigreal("8796093022208"),
                                    bigreal("17592186044416"),
                                    bigreal("35184372088832"),
                                    bigreal("70368744177664"),
                                    bigreal("140737488355328"),
                                    bigreal("281474976710656"),
                                    bigreal("562949953421312"),
                                    bigreal("1125899906842624"),
                                    bigreal("2251799813685248"),
                                    bigreal("4503599627370496"),
                                    bigreal("9007199254740992"),
                                    bigreal("18014398509481984"),
                                    bigreal("36028797018963968"),
                                    bigreal("72057594037927936"),
                                    bigreal("144115188075855872"),
                                    bigreal("288230376151711744"),
                                    bigreal("576460752303423488"),
                                    bigreal("1152921504606846976"),
                                    bigreal("2305843009213693952"),
                                    bigreal("4611686018427387904"),
                                    bigreal("9223372036854775808"),
                                    bigreal("18446744073709551616")};

/**
 * @brief Atanh(1/2^i)
 * 
 */
inline const bigreal BCORDIC_ATANH[65] = {bigreal("0"),
                                        bigreal("10132909862646469819"),
                                        bigreal("4711534773952136861"),
                                        bigreal("2317966470264254163"),
                                        bigreal("1154426232766835933"),
                                        bigreal("576648512315814182"),
                                        bigreal("288253835836344102"),
                                        bigreal("144118120214242138"),
                                        bigreal("72057960545159341"),
                                        bigreal("36028842832053317"),
                                        bigreal("18014404236108322"),
                                        bigreal("9007199970568977"),
                                        bigreal("4503599716848985"),
                                        bigreal("2251799824870059"),
                                        bigreal("1125899908240725"),
                                        bigreal("562949953596075"),
                                        bigreal("281474976732501"),
                                        bigreal("140737488358059"),
                                        bigreal("70368744178005"),
                                        bigreal("35184372088875"),
                                        bigreal("17592186044421"),
                                        bigreal("8796093022209"),
                                        bigreal("4398046511104"),
                                        bigreal("2199023255552"),
                                        bigreal("1099511627776"),
                                        bigreal("549755813888"),
                                        bigreal("274877906944"),
                                        bigreal("137438953472"),
                                        bigreal("68719476736"),
                                        bigreal("34359738368"),
                                        bigreal("17179869184"),
                                        bigreal("8589934592"),
                                        bigreal("4294967296"),
                                        bigreal("2147483648"),
                                        bigreal("1073741824"),
                                        bigreal("536870912"),
                                        bigreal("268435456"),
                                        bigreal("134217728"),
                                        bigreal("67108864"),
                                        bigreal("33554432"),
                                        bigreal("16777216"),
                                        bigreal("8388608"),
                                        bigreal("4194304"),
                                        bigreal("2097152"),
                                        bigreal("1048576"),
                                        bigreal("524288"),
                                        bigreal("262144"),
                                        bigreal("131072"),
                                        bigreal("65536"),
                                        bigreal("32768"),
                                        bigreal("16384"),
                                        bigreal("8192"),
                                        bigreal("4096"),
                                        bigreal("2048"),
                                        bigreal("1024"),
                                        bigreal("512"),
                                        bigreal("256"),
                                        bigreal("128"),
                                        bigreal("64"),
                                        bigreal("32"),
                                        bigreal("16"),
                                        bigreal("8"),
                                        bigreal("4"),
                                        bigreal("2"),
                                        bigreal("1")};

inline const bigreal BIG_1_2EX_BASE = BIG_ONE / BIG_POWERSOF2[BCORDIC_BASE];
inline const bigint2 BCORDIC_BIN_INITIAL_POINT("1001101101110100111011011010100001000011010111100101101001101000");
inline const bigint2 BCORDIC_BIN_HYPERBOLIC_INITIAL_POINT("10011010010000011110100001111111010111111100000100110011010101110");
inline const bigint2 BCORDIC_BIN_ARC_INITIAL_POINT("1001101101110100111011011010100001000011010111100101101001101000");


#endif


#ifdef BCORDIC_BASE_400

/**
 * @brief Base used for CORDIC. Gets set to 400 if BCORDIC_BASE_400 is defined. Default is 64.
 * 
 */
inline int BCORDIC_BASE = 400;

inline int FLOATING_POINT_DEC_PREC = 100;
/**
 * @brief Atan(1/2^i); i in [0,400]
 * 
 */
inline const bigreal BCORDIC_ATAN[401] = {bigreal("1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746688"),
bigreal("762195557370912505905775110140240903421222231377236689708268008108579523838253598141419122949245615327899080735765928234"),
bigreal("402723199820570181750087831344773376769117992015766427287547032461633792116198127567399603498606998223450561042398033386"),
bigreal("204428584425765525672144780985069594511051911898960947796364863125214108183244509527975140169406084829646493336023175164"),
bigreal("102610988931499223621977194968743815472760689489811995917478915021827947796703744486995989414268382634973470979654151259"),
bigreal("51355516110331965210456792715006384628054853794414583995303337945589698201008136290398112969893137357262901568234546814"),
bigreal("25684024489546136503338520408243152504741091922452078470477465778188783739849289286545300225769737777582835711034258566"),
bigreal("12842795979273731603443494976215685732228748425467454367682529825762894585818054044199507533306028200055431686677252152"),
bigreal("6421495969902527271814606078437557280698609290270861670348962030994792495804816364845725363904843622069571714072888957"),
bigreal("3210760232904952190646354538708531959213681231766346130244274703526232019938074784003478846611732581420565769154793177"),
bigreal("1605381647459827755789108810575607482122162678393025124275396827683224533988932336172005950029254537550487366466544332"),
bigreal("802691015106243483331126866142304303069009380645965377115483894739670393975274390400645516270526044485022489716453326"),
bigreal("401345531475175775125752929996931645051988800619239468455404640782988305175282021066076602963165336850332572304554292"),
bigreal("200672768727845042770063370504821460386821326431717081053697974857995262454075084341487990771870150637790353334134972"),
bigreal("100336384737704678317952874859049955186973491733045597453401714242974471416694464000158820655104002385784250131053348"),
bigreal("50168192415575109167217315868772104275850028065634461624795073892495073495912438867911841360620860332730326313760589"),
bigreal("25084096213627900846877071921842830485984210087116568941642437744989699719411732354841792416029198892706541704190541"),
bigreal("12542048107543993706729534716059988324061428097439658538112858078717764361951565059477504159769239422506765640570466"),
bigreal("6271024053863252263788093671389719419866933809102168229586944619921764710602515436033110469369596756692586366787196"),
bigreal("3135512026943033058197336108270117872984534286153274413090430705128535880273817050710786616134997029635706243331428"),
bigreal("1567756013472942394886590884563382075357230688921708999579908261787618130669926675089542189061743446749734684840970"),
bigreal("783878006736649430666786160815119429658696549527653442929158080737177630786458230404845335684037852186852085077237"),
bigreal("391939003368346994486329431622047263844199768603228328149614215159754055147030169329592669237808968370416247393891"),
bigreal("195969501684176282137281760069016106799726011986406245471701685714227702771418914621305639447475266599304790695794"),
bigreal("97984750842088489180405510577887785611154604280357956710958835741455831571878421896365923779413762157448208287377"),
bigreal("48992375421044288104173334107214192858600901213498641425011722029593376339269275784435938927383588325753377363756"),
bigreal("24496187710522149491332989405901753733635030264757416679166662766402889694652484815885904196428087222222502336618"),
bigreal("12248093855261075425572284996988048711037669770910842597245149535963494702072430178877317735683558350889407402665"),
bigreal("6124046927630537797774366285248681451083177095943602246799468462959354626334611728744808178071056004655126611834"),
bigreal("3062023463815268909510711115968673194207032039303865036915312107988922594565281257955765860475093072819992441224"),
bigreal("1531011731907634456083296554652378166052943353412848452723515744592377173252037710666851815601927295778790936622"),
bigreal("765505865953817228207640901909694279469095308968551469589627180984415655834632888796644826442559221309018648013"),
bigreal("382752932976908614124569529027785289299998896502729538705637459918598456301241922970316343997472451611983483203"),
bigreal("191376466488454307064878399273009913345997206253224241670219027135423855422895699752275175658866188049091356888"),
bigreal("95688233244227153532763403981394615260008208900268078213178161543294831694495070214044501499068632819121266781"),
bigreal("47844116622113576766422227533808514953380614110073018883172473882626759873721646765026326274416696719317650178"),
bigreal("23922058311056788383216179459793158392112380416848631448169311550746459473129291586905755471503095310560565356"),
bigreal("11961029155528394191608722941507691810483949680348323147860982304476113302681426845969207065408274630873966648"),
bigreal("5980514577764197095804440622205234982045444783592709132307327037222899303726491816284417925099971843663633513"),
bigreal("2990257288882098547902230205034041125623156135018299468150917850136067045041181512810222035724228772884814447"),
bigreal("1495128644441049273951116339258448517136632285421099923612620399193033291309955008775514637083130990065657720"),
bigreal("747564322220524636975558324221902752858947919949831456648064905196029825513684621622631692169339747557714401"),
bigreal("373782161110262318487779181435036188215802932129834906465177088339638066783849580204050368718549416721998953"),
bigreal("186891080555131159243889593133028695581192587584282631477916789185699552849985021083844407458929596629084735"),
bigreal("93445540277565579621944796868453172974757683982061971800177086643215392144897701204077831718810522508698668"),
bigreal("46722770138782789810972398471968939635399015764771068182133150497384040249550998840081999389453310313850721"),
bigreal("23361385069391394905486199240702263961202029604103044384896909604085333216041830509135826683814420201100452"),
bigreal("11680692534695697452743099620940856248538830017266210979445207798292495434089474221292910518673478971390168"),
bigreal("5840346267347848726371549810544143657761641910534941588105571811234528341855190343385215542895661756546940"),
bigreal("2920173133673924363185774905281286270567349318005200306350918575489457124702398180844306702896351408145377"),
bigreal("1460086566836962181592887452641794940494490704344816342212734049005663865187846227661720817421262669891753"),
bigreal("730043283418481090796443726321041445898597357840185194736026625208164819936466404770044003585860918731755"),
bigreal("365021641709240545398221863160538719905717679628564725321720770678115145088799938714427378095945722815131"),
bigreal("182510820854620272699110931580271609572411214902841378655073817847869980815806712178452093177976052728152"),
bigreal("91255410427310136349555465790136085988649654337490566326813587995335238828745945841257807483118453056696"),
bigreal("45627705213655068174777732895068078144630333029504017788316378881836359760319444980238403865134289181581"),
bigreal("22813852606827534087388866447534043466103354747346850722271887551446888338819942383214312260883051217095"),
bigreal("11406926303413767043694433223767022282275200902747780589650156039539770724099277143420417509383170930934"),
bigreal("5703463151706883521847216611883511209790540892508184698389354552746933618803201142723628070431233536835"),
bigreal("2851731575853441760923608305941755613476888001395879149640211842995598073915089621708390251038445977528"),
bigreal("1425865787926720880461804152970877807811146195090662924875797742325565452284833871177826490039432052409"),
bigreal("712932893963360440230902076485438904039660871844421881194860348766253528285300034661564332382940765801"),
bigreal("356466446981680220115451038242719452036591407709597242942050359083560614417603278668994713574317181807"),
bigreal("178233223490840110057725519121359726020390825328221909264102702629334538493392449312840524005715806594"),
bigreal("89116611745420055028862759560679863010457302848288865606186041700611548157277002538433989117543222940"),
bigreal("44558305872710027514431379780339931505261387697166671674859857148548808942461314961803736423493703541"),
bigreal("22279152936355013757215689890169965752634785882711115696400783111554783829208515956766930506567939126"),
bigreal("11139576468177506878607844945084982876317904445621530330571748372937439334351490499250714276440693790"),
bigreal("5569788234088753439303922472542491438159016160844011725582293788613725594644149321339516898499440183"),
bigreal("2784894117044376719651961236271245719079516072676161682828199344574988538255625169840458220296622464"),
bigreal("1392447058522188359825980618135622859539759035369850318918731228571009986744506398573017512810799519"),
bigreal("696223529261094179912990309067811429769879642563896344147444558820944458074339925993308898340761592"),
bigreal("348111764630547089956495154533905714884939836891819570159732147477402162124930803835010766649880738"),
bigreal("174055882315273544978247577266952857442469920397143709840617307247067322698435507022300119876677227"),
bigreal("87027941157636772489123788633476428721234960442476095515402557812079441553714016649249408159393201"),
bigreal("43513970578818386244561894316738214360617480251726077832088016929607943302419041216887122799581158"),
bigreal("21756985289409193122280947158369107180308740129674042675342350717749999466904774719976363745784046"),
bigreal("10878492644704596561140473579184553590154370065313396807583468140493253210414294123929782166328954"),
bigreal("5439246322352298280570236789592276795077185032716245337530770667948908289827385407457591119849960"),
bigreal("2719623161176149140285118394796138397538592516365566035482764908687239355491222496915383064510849"),
bigreal("1359811580588074570142559197398069198769296258183713438581054901182717829067802472606014970328664"),
bigreal("679905790294037285071279598699034599384648129091973021895486506446246183449175139321547914923487"),
bigreal("339952895147018642535639799349517299692324064546001048773363135204984000338996807538091511181638"),
bigreal("169976447573509321267819899674758649846162032273002341614884052850224613746299558503710449805806"),
bigreal("84988223786754660633909949837379324923081016136501397960967337081078883570249923593688311679776"),
bigreal("42494111893377330316954974918689662461540508068250727374674332372535263872262479839573291686997"),
bigreal("21247055946688665158477487459344831230770254034125367236610999165267109697023429675127787824387"),
bigreal("10623527973344332579238743729672415615385127017062684061964728705008489568623238556981536659805"),
bigreal("5311763986672166289619371864836207807692563508531342086439767992801111624325559743417973673354"),
bigreal("2655881993336083144809685932418103903846281754265671050152059451437664167164522429824887504608"),
bigreal("1327940996668041572404842966209051951923140877132835525942551657598470627957479034676931335796"),
bigreal("663970498334020786202421483104525975961570438566417763079591070284190132025641744809026615834"),
bigreal("331985249167010393101210741552262987980785219283208881553334940327714418268683650838333426409"),
bigreal("165992624583505196550605370776131493990392609641604440778359895812059628166324672723394228016"),
bigreal("82996312291752598275302685388065746995196304820802220389391501112055116462160192274725553359"),
bigreal("41498156145876299137651342694032873497598152410401110194722194706780721028454828126491331599"),
bigreal("20749078072938149568825671347016436748799076205200555097364402872234505863899255561886735164"),
bigreal("10374539036469074784412835673508218374399538102600277548682614625972771100658607968273501253"),
bigreal("5187269518234537392206417836754109187199769051300138774341358961718325321417926507553017335"),
bigreal("2593634759117268696103208918377054593599884525650069387170685936950655132095041069203542006"),
bigreal("1296817379558634348051604459188527296799942262825034693585343775486764124970780261530150170"),
bigreal("648408689779317174025802229594263648399971131412517346792671988619811632350797596631122481"),
bigreal("324204344889658587012901114797131824199985565706258673396336006919459512408574731548817165"),
bigreal("162102172444829293506450557398565912099992782853129336698168005035923968233434357428565573"),
bigreal("81051086222414646753225278699282956049996391426564668349084002714986260620360552671052410"),
bigreal("40525543111207323376612639349641478024998195713282334174542001382121164873135698080122408"),
bigreal("20262771555603661688306319674820739012499097856641167087271000694139086756937276758135729"),
bigreal("10131385777801830844153159837410369506249548928320583543635500347454356418514816843827180"),
bigreal("5065692888900915422076579918705184753124774464160291771817750173775279839263180730008505"),
bigreal("2532846444450457711038289959352592376562387232080145885908875086893652623382311903516117"),
bigreal("1266423222225228855519144979676296188281193616040072942954437543447577899659996144072041"),
bigreal("633211611112614427759572489838148094140596808020036471477218771723882898326103096075269"),
bigreal("316605805556307213879786244919074047070298404010018235738609385861953192725064676042540"),
bigreal("158302902778153606939893122459537023535149202005009117869304692930978064307783979021883"),
bigreal("79151451389076803469946561229768511767574601002504558934652346465489215647048444636018"),
bigreal("39575725694538401734973280614884255883787300501252279467326173232744630760168779208644"),
bigreal("19787862847269200867486640307442127941893650250626139733663086616372318247164959215651"),
bigreal("9893931423634600433743320153721063970946825125313069866831543308186159481967550809242"),
bigreal("4946965711817300216871660076860531985473412562656534933415771654093079785781909304798"),
bigreal("2473482855908650108435830038430265992736706281328267466707885827046539898490721389921"),
bigreal("1236741427954325054217915019215132996368353140664133733353942913523269949945331537151"),
bigreal("618370713977162527108957509607566498184176570332066866676971456761634975060162123849"),
bigreal("309185356988581263554478754803783249092088285166033433338485728380817487541018106334"),
bigreal("154592678494290631777239377401891624546044142583016716669242864190408743771876183718"),
bigreal("77296339247145315888619688700945812273022071291508358334621432095204371886108983178"),
bigreal("38648169623572657944309844350472906136511035645754179167310716047602185943075853004"),
bigreal("19324084811786328972154922175236453068255517822877089583655358023801092971540596679"),
bigreal("9662042405893164486077461087618226534127758911438544791827679011900546485770632111"),
bigreal("4831021202946582243038730543809113267063879455719272395913839505950273242885357777"),
bigreal("2415510601473291121519365271904556633531939727859636197956919752975136621442684104"),
bigreal("1207755300736645560759682635952278316765969863929818098978459876487568310721342704"),
bigreal("603877650368322780379841317976139158382984931964909049489229938243784155360671433"),
bigreal("301938825184161390189920658988069579191492465982454524744614969121892077680335727"),
bigreal("150969412592080695094960329494034789595746232991227262372307484560946038840167865"),
bigreal("75484706296040347547480164747017394797873116495613631186153742280473019420083933"),
bigreal("37742353148020173773740082373508697398936558247806815593076871140236509710041966"),
bigreal("18871176574010086886870041186754348699468279123903407796538435570118254855020983"),
bigreal("9435588287005043443435020593377174349734139561951703898269217785059127427510492"),
bigreal("4717794143502521721717510296688587174867069780975851949134608892529563713755246"),
bigreal("2358897071751260860858755148344293587433534890487925974567304446264781856877623"),
bigreal("1179448535875630430429377574172146793716767445243962987283652223132390928438811"),
bigreal("589724267937815215214688787086073396858383722621981493641826111566195464219406"),
bigreal("294862133968907607607344393543036698429191861310990746820913055783097732109703"),
bigreal("147431066984453803803672196771518349214595930655495373410456527891548866054851"),
bigreal("73715533492226901901836098385759174607297965327747686705228263945774433027426"),
bigreal("36857766746113450950918049192879587303648982663873843352614131972887216513713"),
bigreal("18428883373056725475459024596439793651824491331936921676307065986443608256856"),
bigreal("9214441686528362737729512298219896825912245665968460838153532993221804128428"),
bigreal("4607220843264181368864756149109948412956122832984230419076766496610902064214"),
bigreal("2303610421632090684432378074554974206478061416492115209538383248305451032107"),
bigreal("1151805210816045342216189037277487103239030708246057604769191624152725516054"),
bigreal("575902605408022671108094518638743551619515354123028802384595812076362758027"),
bigreal("287951302704011335554047259319371775809757677061514401192297906038181379013"),
bigreal("143975651352005667777023629659685887904878838530757200596148953019090689507"),
bigreal("71987825676002833888511814829842943952439419265378600298074476509545344753"),
bigreal("35993912838001416944255907414921471976219709632689300149037238254772672377"),
bigreal("17996956419000708472127953707460735988109854816344650074518619127386336188"),
bigreal("8998478209500354236063976853730367994054927408172325037259309563693168094"),
bigreal("4499239104750177118031988426865183997027463704086162518629654781846584047"),
bigreal("2249619552375088559015994213432591998513731852043081259314827390923292024"),
bigreal("1124809776187544279507997106716295999256865926021540629657413695461646012"),
bigreal("562404888093772139753998553358147999628432963010770314828706847730823006"),
bigreal("281202444046886069876999276679073999814216481505385157414353423865411503"),
bigreal("140601222023443034938499638339536999907108240752692578707176711932705751"),
bigreal("70300611011721517469249819169768499953554120376346289353588355966352876"),
bigreal("35150305505860758734624909584884249976777060188173144676794177983176438"),
bigreal("17575152752930379367312454792442124988388530094086572338397088991588219"),
bigreal("8787576376465189683656227396221062494194265047043286169198544495794109"),
bigreal("4393788188232594841828113698110531247097132523521643084599272247897055"),
bigreal("2196894094116297420914056849055265623548566261760821542299636123948527"),
bigreal("1098447047058148710457028424527632811774283130880410771149818061974264"),
bigreal("549223523529074355228514212263816405887141565440205385574909030987132"),
bigreal("274611761764537177614257106131908202943570782720102692787454515493566"),
bigreal("137305880882268588807128553065954101471785391360051346393727257746783"),
bigreal("68652940441134294403564276532977050735892695680025673196863628873391"),
bigreal("34326470220567147201782138266488525367946347840012836598431814436696"),
bigreal("17163235110283573600891069133244262683973173920006418299215907218348"),
bigreal("8581617555141786800445534566622131341986586960003209149607953609174"),
bigreal("4290808777570893400222767283311065670993293480001604574803976804587"),
bigreal("2145404388785446700111383641655532835496646740000802287401988402293"),
bigreal("1072702194392723350055691820827766417748323370000401143700994201147"),
bigreal("536351097196361675027845910413883208874161685000200571850497100573"),
bigreal("268175548598180837513922955206941604437080842500100285925248550287"),
bigreal("134087774299090418756961477603470802218540421250050142962624275143"),
bigreal("67043887149545209378480738801735401109270210625025071481312137572"),
bigreal("33521943574772604689240369400867700554635105312512535740656068786"),
bigreal("16760971787386302344620184700433850277317552656256267870328034393"),
bigreal("8380485893693151172310092350216925138658776328128133935164017196"),
bigreal("4190242946846575586155046175108462569329388164064066967582008598"),
bigreal("2095121473423287793077523087554231284664694082032033483791004299"),
bigreal("1047560736711643896538761543777115642332347041016016741895502150"),
bigreal("523780368355821948269380771888557821166173520508008370947751075"),
bigreal("261890184177910974134690385944278910583086760254004185473875537"),
bigreal("130945092088955487067345192972139455291543380127002092736937769"),
bigreal("65472546044477743533672596486069727645771690063501046368468884"),
bigreal("32736273022238871766836298243034863822885845031750523184234442"),
bigreal("16368136511119435883418149121517431911442922515875261592117221"),
bigreal("8184068255559717941709074560758715955721461257937630796058611"),
bigreal("4092034127779858970854537280379357977860730628968815398029305"),
bigreal("2046017063889929485427268640189678988930365314484407699014653"),
bigreal("1023008531944964742713634320094839494465182657242203849507326"),
bigreal("511504265972482371356817160047419747232591328621101924753663"),
bigreal("255752132986241185678408580023709873616295664310550962376832"),
bigreal("127876066493120592839204290011854936808147832155275481188416"),
bigreal("63938033246560296419602145005927468404073916077637740594208"),
bigreal("31969016623280148209801072502963734202036958038818870297104"),
bigreal("15984508311640074104900536251481867101018479019409435148552"),
bigreal("7992254155820037052450268125740933550509239509704717574276"),
bigreal("3996127077910018526225134062870466775254619754852358787138"),
bigreal("1998063538955009263112567031435233387627309877426179393569"),
bigreal("999031769477504631556283515717616693813654938713089696784"),
bigreal("499515884738752315778141757858808346906827469356544848392"),
bigreal("249757942369376157889070878929404173453413734678272424196"),
bigreal("124878971184688078944535439464702086726706867339136212098"),
bigreal("62439485592344039472267719732351043363353433669568106049"),
bigreal("31219742796172019736133859866175521681676716834784053025"),
bigreal("15609871398086009868066929933087760840838358417392026512"),
bigreal("7804935699043004934033464966543880420419179208696013256"),
bigreal("3902467849521502467016732483271940210209589604348006628"),
bigreal("1951233924760751233508366241635970105104794802174003314"),
bigreal("975616962380375616754183120817985052552397401087001657"),
bigreal("487808481190187808377091560408992526276198700543500829"),
bigreal("243904240595093904188545780204496263138099350271750414"),
bigreal("121952120297546952094272890102248131569049675135875207"),
bigreal("60976060148773476047136445051124065784524837567937604"),
bigreal("30488030074386738023568222525562032892262418783968802"),
bigreal("15244015037193369011784111262781016446131209391984401"),
bigreal("7622007518596684505892055631390508223065604695992200"),
bigreal("3811003759298342252946027815695254111532802347996100"),
bigreal("1905501879649171126473013907847627055766401173998050"),
bigreal("952750939824585563236506953923813527883200586999025"),
bigreal("476375469912292781618253476961906763941600293499513"),
bigreal("238187734956146390809126738480953381970800146749756"),
bigreal("119093867478073195404563369240476690985400073374878"),
bigreal("59546933739036597702281684620238345492700036687439"),
bigreal("29773466869518298851140842310119172746350018343720"),
bigreal("14886733434759149425570421155059586373175009171860"),
bigreal("7443366717379574712785210577529793186587504585930"),
bigreal("3721683358689787356392605288764896593293752292965"),
bigreal("1860841679344893678196302644382448296646876146482"),
bigreal("930420839672446839098151322191224148323438073241"),
bigreal("465210419836223419549075661095612074161719036621"),
bigreal("232605209918111709774537830547806037080859518310"),
bigreal("116302604959055854887268915273903018540429759155"),
bigreal("58151302479527927443634457636951509270214879578"),
bigreal("29075651239763963721817228818475754635107439789"),
bigreal("14537825619881981860908614409237877317553719894"),
bigreal("7268912809940990930454307204618938658776859947"),
bigreal("3634456404970495465227153602309469329388429974"),
bigreal("1817228202485247732613576801154734664694214987"),
bigreal("908614101242623866306788400577367332347107493"),
bigreal("454307050621311933153394200288683666173553747"),
bigreal("227153525310655966576697100144341833086776873"),
bigreal("113576762655327983288348550072170916543388437"),
bigreal("56788381327663991644174275036085458271694218"),
bigreal("28394190663831995822087137518042729135847109"),
bigreal("14197095331915997911043568759021364567923555"),
bigreal("7098547665957998955521784379510682283961777"),
bigreal("3549273832978999477760892189755341141980889"),
bigreal("1774636916489499738880446094877670570990444"),
bigreal("887318458244749869440223047438835285495222"),
bigreal("443659229122374934720111523719417642747611"),
bigreal("221829614561187467360055761859708821373806"),
bigreal("110914807280593733680027880929854410686903"),
bigreal("55457403640296866840013940464927205343451"),
bigreal("27728701820148433420006970232463602671726"),
bigreal("13864350910074216710003485116231801335863"),
bigreal("6932175455037108355001742558115900667931"),
bigreal("3466087727518554177500871279057950333966"),
bigreal("1733043863759277088750435639528975166983"),
bigreal("866521931879638544375217819764487583491"),
bigreal("433260965939819272187608909882243791746"),
bigreal("216630482969909636093804454941121895873"),
bigreal("108315241484954818046902227470560947936"),
bigreal("54157620742477409023451113735280473968"),
bigreal("27078810371238704511725556867640236984"),
bigreal("13539405185619352255862778433820118492"),
bigreal("6769702592809676127931389216910059246"),
bigreal("3384851296404838063965694608455029623"),
bigreal("1692425648202419031982847304227514812"),
bigreal("846212824101209515991423652113757406"),
bigreal("423106412050604757995711826056878703"),
bigreal("211553206025302378997855913028439351"),
bigreal("105776603012651189498927956514219676"),
bigreal("52888301506325594749463978257109838"),
bigreal("26444150753162797374731989128554919"),
bigreal("13222075376581398687365994564277459"),
bigreal("6611037688290699343682997282138730"),
bigreal("3305518844145349671841498641069365"),
bigreal("1652759422072674835920749320534682"),
bigreal("826379711036337417960374660267341"),
bigreal("413189855518168708980187330133671"),
bigreal("206594927759084354490093665066835"),
bigreal("103297463879542177245046832533418"),
bigreal("51648731939771088622523416266709"),
bigreal("25824365969885544311261708133354"),
bigreal("12912182984942772155630854066677"),
bigreal("6456091492471386077815427033339"),
bigreal("3228045746235693038907713516669"),
bigreal("1614022873117846519453856758335"),
bigreal("807011436558923259726928379167"),
bigreal("403505718279461629863464189584"),
bigreal("201752859139730814931732094792"),
bigreal("100876429569865407465866047396"),
bigreal("50438214784932703732933023698"),
bigreal("25219107392466351866466511849"),
bigreal("12609553696233175933233255924"),
bigreal("6304776848116587966616627962"),
bigreal("3152388424058293983308313981"),
bigreal("1576194212029146991654156991"),
bigreal("788097106014573495827078495"),
bigreal("394048553007286747913539248"),
bigreal("197024276503643373956769624"),
bigreal("98512138251821686978384812"),
bigreal("49256069125910843489192406"),
bigreal("24628034562955421744596203"),
bigreal("12314017281477710872298101"),
bigreal("6157008640738855436149051"),
bigreal("3078504320369427718074525"),
bigreal("1539252160184713859037263"),
bigreal("769626080092356929518631"),
bigreal("384813040046178464759316"),
bigreal("192406520023089232379658"),
bigreal("96203260011544616189829"),
bigreal("48101630005772308094914"),
bigreal("24050815002886154047457"),
bigreal("12025407501443077023729"),
bigreal("6012703750721538511864"),
bigreal("3006351875360769255932"),
bigreal("1503175937680384627966"),
bigreal("751587968840192313983"),
bigreal("375793984420096156992"),
bigreal("187896992210048078496"),
bigreal("93948496105024039248"),
bigreal("46974248052512019624"),
bigreal("23487124026256009812"),
bigreal("11743562013128004906"),
bigreal("5871781006564002453"),
bigreal("2935890503282001226"),
bigreal("1467945251641000613"),
bigreal("733972625820500307"),
bigreal("366986312910250153"),
bigreal("183493156455125077"),
bigreal("91746578227562538"),
bigreal("45873289113781269"),
bigreal("22936644556890635"),
bigreal("11468322278445317"),
bigreal("5734161139222659"),
bigreal("2867080569611329"),
bigreal("1433540284805665"),
bigreal("716770142402832"),
bigreal("358385071201416"),
bigreal("179192535600708"),
bigreal("89596267800354"),
bigreal("44798133900177"),
bigreal("22399066950089"),
bigreal("11199533475044"),
bigreal("5599766737522"),
bigreal("2799883368761"),
bigreal("1399941684381"),
bigreal("699970842190"),
bigreal("349985421095"),
bigreal("174992710548"),
bigreal("87496355274"),
bigreal("43748177637"),
bigreal("21874088818"),
bigreal("10937044409"),
bigreal("5468522205"),
bigreal("2734261102"),
bigreal("1367130551"),
bigreal("683565276"),
bigreal("341782638"),
bigreal("170891319"),
bigreal("85445659"),
bigreal("42722830"),
bigreal("21361415"),
bigreal("10680707"),
bigreal("5340354"),
bigreal("2670177"),
bigreal("1335088"),
bigreal("667544"),
bigreal("333772"),
bigreal("166886"),
bigreal("83443"),
bigreal("41722"),
bigreal("20861"),
bigreal("10430"),
bigreal("5215"),
bigreal("2608"),
bigreal("1304"),
bigreal("652"),
bigreal("326"),
bigreal("163"),
bigreal("81"),
bigreal("41"),
bigreal("20"),
bigreal("10"),
bigreal("5"),
bigreal("3"),
bigreal("1"),
bigreal("1")};


/**
 * @brief Atanh(1/2^i) - i in [0,400]
 * 
 */
inline const bigreal BCORDIC_ATANH[401] = {bigreal("0"),
bigreal("1418445724239002938841398314067589837431718763823082993762066982734521425912879771179358356259085056089548155050412126510"),
bigreal("659539702346699238389091430375229591346329385935949083049280533364425691226686554722028855059211212963740836983956386047"),
bigreal("324478325894925425676991310653495983774187130328176541597372054731001843504874434391569731243781272281220814404402804302"),
bigreal("161601255316978171074239543246837280239788396049262095690346722708947420519937171673313342351944406550433343350984971259"),
bigreal("80721592096499849393013427463654052109103956847777792680588469592045196950739553640616726229569418534944876303225939737"),
bigreal("40350938326689726323124991693195373451217702665566614667003337839207258677091770073079596713299981954854123615482959453"),
bigreal("20174237625149846978692502791509860367960399461959884782418145358673664938057827597352408479769836888766899211318705968"),
bigreal("10086964891442268536353653171920114980516178162015657415207350657915689302282650679330277859898656034734396475580919512"),
bigreal("5043463206240117798056881704954832827528295260442686341827326532798751344223502282825503864338211309503797430087835144"),
bigreal("2521729198205573623089929654678547293343531452011525939657845677023875229682932142315650198847478553670139682198659165"),
bigreal("1260864298489121200845271406263109224114600960285510350930156770142963692606837423108945409015774819044027472153915977"),
bigreal("630432111667872556805876030554074634565491318742075841990838582277204195202262210544459452015915208263458826980366099"),
bigreal("315216051136850902879192593666712096328197114722381896029639685503113021106575005575590871914723640633137602248108636"),
bigreal("157608024981289799184385742178654117772040501461025072587756760053537504307123127473276463813900654542099902021247317"),
bigreal("78804012417252943675455826696457052302599926732178863952111389977766900953582911267959517647808953438020983200564536"),
bigreal("39402006199452477367359666189546603191937694840764841529896261574899118463078160269874439312016474678131968470759441"),
bigreal("19701003098579489375484548554315337788026799776398038582737652898677805918761241572966572007257146182792316300670053"),
bigreal("9850501549146401024236637033162419858987021030927132875834458002021496204934894944890233672057915081740150752646003"),
bigreal("4925250774555282554180700527443020146304892343796706947867029872433067709705491638182195124022703785517627251621725"),
bigreal("2462625387275401532348166348403023610739558072061892887084353510970370331145806640565399609679683997462691830003494"),
bigreal("1231312693637420798081310757703069343596371292437323984366054196316802786296617873906426779783333860378878356373176"),
bigreal("615656346818675403029058844692865874844094354502916832216797730140639042361663303887685740589856352492883173899578"),
bigreal("307828173409333327013079856136087978763915000388667863629293707097093768252169772756129595625483171450198835928153"),
bigreal("153914086704666116693858732309234889579723471460517086686049755300848585622482750959970245128708196826675805291925"),
bigreal("76957043352332989995344216685312682940520975718913136494002584138938182288679647661481729690331575007080155705785"),
bigreal("38478521676166486453723964659010320477403470611819407975059994243496522739902414869598199252824292377191696667323"),
bigreal("19239260838083242158868464369049941184541813703427856999112980884860472696234309345589752531321742847610129358480"),
bigreal("9619630419041620945935042439468084884561766824939309606401804083510073555769825889459629759611271204246274292211"),
bigreal("4809815209520810456280122501601932249881642477045733964705495656447745502609841635693817947193301725791223820879"),
bigreal("2404907604760405226054136411034452367174178670592467070832675366207676592835621346582512344748310506362491885522"),
bigreal("1202453802380202612766327600546411964375110968961108235051413489700934280939822335957868451952731492621688979735"),
bigreal("601226901190101306350571224651854204801959812271668913959271329307846342429276783818206732607167458416308669238"),
bigreal("300613450595050653171211540373258130228277372846692727126627559126351829301859914481217306062580895309375765232"),
bigreal("150306725297525326585096511192545443592566398691483926100210283783803778906676527902687467654205476010891864099"),
bigreal("75153362648762663292484598222012269106087148658299167078733515091461971328405396993552422223478384048415197543"),
bigreal("37576681324381331646234341939223577966769083158189234315180188744041591975954490033798057096029386320580757902"),
bigreal("18788340662190665823116176323138969410100230656629886013074113412817071428688368659568367263878281764546918940"),
bigreal("9394170331095332911557963830760382258389576477816392629363413465905732827099426238286797833223740136095451064"),
bigreal("4697085165547666455778966374029053323362220883058675674281590527246124104298140350578903932772756622553585970"),
bigreal("2348542582773833227889481244345634435952039522062610199489111650389597101769473473605232762366450032209835843"),
bigreal("1174271291386916613944740379339205689759885896098416096363043214555611610327678252878451809975973233854214391"),
bigreal("587135645693458306972370159315401403852926214932611046237737150979626068131361534384113465915761711404704550"),
bigreal("293567822846729153486185075863425521798086015826731339234611287828531774140650453889727965755320958870464232"),
bigreal("146783911423364576743092537457428363382995871458418910424233350749605454804820350622476753651341037510775215"),
bigreal("73391955711682288371546268669428632001992043672341110743997009597751414782507172379523971800349001359648983"),
bigreal("36695977855841144185773134327303622289807785329062012326952745666385894607930870282412195993152119967757419"),
bigreal("18347988927920572092886567162725474431005363101142438283266565413183020746492756884928423505452872019171894"),
bigreal("9173994463960286046443283581246945126265365355147648156620210293826247679826126823926439298962891696352539"),
bigreal("4586997231980143023221641790608998551978018153145877705183882142652965319681276746005219002910671280592525"),
bigreal("2293498615990071511610820895302690024594676011019445555951176041023197198450594564331584618086703687822151"),
bigreal("1146749307995035755805410447651118855873046372315536115895492793137101490102758353724843107480252515497379"),
bigreal("573374653997517877902705223825531158383486732008494725187734505690907780584537327921144431918719318170322"),
bigreal("286687326998758938951352611912762045497613809235588195998865766877753806426834542752720123493153248808297"),
bigreal("143343663499379469475676305956380581037040710021711702175057697705164557939391790910060036055845044962996"),
bigreal("71671831749689734737838152978190235304549580686345551609481950636251053473228766168138811249941818712922"),
bigreal("35835915874844867368919076489095110750528443552608988369985113041096086601518056166064139041265844521133"),
bigreal("17917957937422433684459538244547554512545928427484020755648073735919737129245801725870665393405493003333"),
bigreal("8958978968711216842229769122273777148433177545139451199155976519881341975851679271652321374416058589730"),
bigreal("4479489484355608421114884561136888560736615438994405702244480716430855529412809802645851902972716454161"),
bigreal("2239744742177804210557442280568444278683311052800287863955551915276700843801131574229451966927272970377"),
bigreal("1119872371088902105278721140284222139131030943063029558581939902271009557143933352542231254564698604612"),
bigreal("559936185544451052639360570142111069539187398614375482616490444214587170488529082303122208644074185250"),
bigreal("279968092772225526319680285071055534766302690192545329223935283742178884234183012541610940194568081681"),
bigreal("139984046386112763159840142535527767382739968956942363101428899575450104490842195526938231243922770057"),
bigreal("69992023193056381579920071267763883691318562461054893861897107000770135042140273930872477379746612292"),
bigreal("34996011596528190789960035633881941845652853478350410969846385652015702870660044611686245366298190370"),
bigreal("17498005798264095394980017816940970922825623270153075989785421844961680854028761093665766844474134801"),
bigreal("8749002899132047697490008908470485461412711201448771808000489549850069104351722905687007483864320137"),
bigreal("4374501449566023848745004454235242730706343046520915130638717103346188136843029248024528422806242372"),
bigreal("2187250724783011924372502227117621365353169953985023718649167592725738266504910598420025395673965090"),
bigreal("1093625362391505962186251113558810682676584780833082628490809926494449658012879796011299505219637521"),
bigreal("546812681195752981093125556779405341338292365896612660391183229513672394601492960105820499137300617"),
bigreal("273406340597876490546562778389702670669146179883315248463813898040142143000128112815431902122230852"),
bigreal("136703170298938245273281389194851335334573089558533739015434734430484314712486760503031167293989410"),
bigreal("68351585149469122636640694597425667667286544731376383855658340391543812757796218263429985978093841"),
bigreal("34175792574734561318320347298712833833643272359701881221321791842809613304092213883204293289871497"),
bigreal("17087896287367280659160173649356416916821636179102651772347473627284520017695370035538309182833732"),
bigreal("8543948143683640329580086824678208458410818089457789781384559026877224179553842904511174908663330"),
bigreal("4271974071841820164790043412339104229205409044717202877593632290092982611115191188098339993987761"),
bigreal("2135987035920910082395021706169552114602704522357139937159485242128287620724879311029514064450902"),
bigreal("1067993517960455041197510853084776057301352261178387280875076258199368349758350120137300040657579"),
bigreal("533996758980227520598755426542388028650676130589170804474454833741587242303663868146467896382805"),
bigreal("266998379490113760299377713271194014325338065294582547741842004951031504579893035082961182698155"),
bigreal("133499189745056880149688856635597007162669032647290917058997825985545487718454155167696495662421"),
bigreal("66749594872528440074844428317798503581334516323645413928008515931526460787790532287125235870379"),
bigreal("33374797436264220037422214158899251790667258161822701388817958333107445009965697981472241440085"),
bigreal("16687398718132110018711107079449625895333629080911349997510691712471749331991652970474823658155"),
bigreal("8343699359066055009355553539724812947666814540455674911643059924475628019371926982704749696341"),
bigreal("4171849679533027504677776769862406473833407270227837444932494220767783178857976053535792081579"),
bigreal("2085924839766513752338888384931203236916703635113918721105117642700137735575489597040823194965"),
bigreal("1042962419883256876169444192465601618458351817556959360382417637889599636056057494804527491755"),
bigreal("521481209941628438084722096232800809229175908778479680169941171012241164061567834437778232661"),
bigreal("260740604970814219042361048116400404614587954389239840082312129514550750284976303098328427179"),
bigreal("130370302485407109521180524058200202307293977194619920040823757758329146174262199784094127445"),
bigreal("65185151242703554760590262029100101153646988597309960020370340504296294466102855921413302955"),
bigreal("32592575621351777380295131014550050576823494298654980010179977955289612405422897464377431381"),
bigreal("16296287810675888690147565507275025288411747149327490005089339940537489349257882420147563179"),
bigreal("8148143905337944345073782753637512644205873574663745002544588840630330067947245421068637525"),
bigreal("4074071952668972172536891376818756322102936787331872501272284279110363208138410736908675755"),
bigreal("2037035976334486086268445688409378161051468393665936250636140871904581375839803871751132501"),
bigreal("1018517988167243043134222844204689080525734196832968125318070277495965659391226748787665579"),
bigreal("509258994083621521567111422102344540262867098416484062659035118940942201129528976007845205"),
bigreal("254629497041810760783555711051172270131433549208242031329517556994591021994003938205674155"),
bigreal("127314748520905380391777855525586135065716774604121015664758778187810501175656900378056021"),
bigreal("63657374260452690195888927762793067532858387302060507832379389055219624360160316598430379"),
bigreal("31828687130226345097944463881396533766429193651030253916189694522774108901621641600390485"),
bigreal("15914343565113172548972231940698266883214596825515126958094847260782591541003506212842155"),
bigreal("7957171782556586274486115970349133441607298412757563479047423630315737906775838783001941"),
bigreal("3978585891278293137243057985174566720803649206378781739523711815148424220422180101073579"),
bigreal("1989292945639146568621528992587283360401824603189390869761855907573031518590372639233365"),
bigreal("994646472819573284310764496293641680200912301594695434880927953786368185342596643203755"),
bigreal("497323236409786642155382248146820840100456150797347717440463976893165645927224612050261"),
bigreal("248661618204893321077691124073410420050228075398673858720231988446580517120603092331179"),
bigreal("124330809102446660538845562036705210025114037699336929360115994223289970329925394453845"),
bigreal("62165404551223330269422781018352605012557018849668464680057997111644949136165678262955"),
bigreal("31082702275611665134711390509176302506278509424834232340028998555822470064483211760981"),
bigreal("15541351137805832567355695254588151253139254712417116170014499277911234469291652459179"),
bigreal("7770675568902916283677847627294075626569627356208558085007249638955617164277082051925"),
bigreal("3885337784451458141838923813647037813284813678104279042503624819477808573342448003755"),
bigreal("1942668892225729070919461906823518906642406839052139521251812409738904285571712374101"),
bigreal("971334446112864535459730953411759453321203419526069760625906204869452142648417233579"),
bigreal("485667223056432267729865476705879726660601709763034880312953102434726071307028747605"),
bigreal("242833611528216133864932738352939863330300854881517440156476551217363035651366890155"),
bigreal("121416805764108066932466369176469931665150427440758720078238275608681517825415009621"),
bigreal("60708402882054033466233184588234965832575213720379360039119137804340758912673950379"),
bigreal("30354201441027016733116592294117482916287606860189680019559568902170379456332780885"),
bigreal("15177100720513508366558296147058741458143803430094840009779784451085189728165866155"),
bigreal("7588550360256754183279148073529370729071901715047420004889892225542594864082867541"),
bigreal("3794275180128377091639574036764685364535950857523710002444946112771297432041425579"),
bigreal("1897137590064188545819787018382342682267975428761855001222473056385648716020711765"),
bigreal("948568795032094272909893509191171341133987714380927500611236528192824358010355755"),
bigreal("474284397516047136454946754595585670566993857190463750305618264096412179005177861"),
bigreal("237142198758023568227473377297792835283496928595231875152809132048206089502588929"),
bigreal("118571099379011784113736688648896417641748464297615937576404566024103044751294464"),
bigreal("59285549689505892056868344324448208820874232148807968788202283012051522375647232"),
bigreal("29642774844752946028434172162224104410437116074403984394101141506025761187823616"),
bigreal("14821387422376473014217086081112052205218558037201992197050570753012880593911808"),
bigreal("7410693711188236507108543040556026102609279018600996098525285376506440296955904"),
bigreal("3705346855594118253554271520278013051304639509300498049262642688253220148477952"),
bigreal("1852673427797059126777135760139006525652319754650249024631321344126610074238976"),
bigreal("926336713898529563388567880069503262826159877325124512315660672063305037119488"),
bigreal("463168356949264781694283940034751631413079938662562256157830336031652518559744"),
bigreal("231584178474632390847141970017375815706539969331281128078915168015826259279872"),
bigreal("115792089237316195423570985008687907853269984665640564039457584007913129639936"),
bigreal("57896044618658097711785492504343953926634992332820282019728792003956564819968"),
bigreal("28948022309329048855892746252171976963317496166410141009864396001978282409984"),
bigreal("14474011154664524427946373126085988481658748083205070504932198000989141204992"),
bigreal("7237005577332262213973186563042994240829374041602535252466099000494570602496"),
bigreal("3618502788666131106986593281521497120414687020801267626233049500247285301248"),
bigreal("1809251394333065553493296640760748560207343510400633813116524750123642650624"),
bigreal("904625697166532776746648320380374280103671755200316906558262375061821325312"),
bigreal("452312848583266388373324160190187140051835877600158453279131187530910662656"),
bigreal("226156424291633194186662080095093570025917938800079226639565593765455331328"),
bigreal("113078212145816597093331040047546785012958969400039613319782796882727665664"),
bigreal("56539106072908298546665520023773392506479484700019806659891398441363832832"),
bigreal("28269553036454149273332760011886696253239742350009903329945699220681916416"),
bigreal("14134776518227074636666380005943348126619871175004951664972849610340958208"),
bigreal("7067388259113537318333190002971674063309935587502475832486424805170479104"),
bigreal("3533694129556768659166595001485837031654967793751237916243212402585239552"),
bigreal("1766847064778384329583297500742918515827483896875618958121606201292619776"),
bigreal("883423532389192164791648750371459257913741948437809479060803100646309888"),
bigreal("441711766194596082395824375185729628956870974218904739530401550323154944"),
bigreal("220855883097298041197912187592864814478435487109452369765200775161577472"),
bigreal("110427941548649020598956093796432407239217743554726184882600387580788736"),
bigreal("55213970774324510299478046898216203619608871777363092441300193790394368"),
bigreal("27606985387162255149739023449108101809804435888681546220650096895197184"),
bigreal("13803492693581127574869511724554050904902217944340773110325048447598592"),
bigreal("6901746346790563787434755862277025452451108972170386555162524223799296"),
bigreal("3450873173395281893717377931138512726225554486085193277581262111899648"),
bigreal("1725436586697640946858688965569256363112777243042596638790631055949824"),
bigreal("862718293348820473429344482784628181556388621521298319395315527974912"),
bigreal("431359146674410236714672241392314090778194310760649159697657763987456"),
bigreal("215679573337205118357336120696157045389097155380324579848828881993728"),
bigreal("107839786668602559178668060348078522694548577690162289924414440996864"),
bigreal("53919893334301279589334030174039261347274288845081144962207220498432"),
bigreal("26959946667150639794667015087019630673637144422540572481103610249216"),
bigreal("13479973333575319897333507543509815336818572211270286240551805124608"),
bigreal("6739986666787659948666753771754907668409286105635143120275902562304"),
bigreal("3369993333393829974333376885877453834204643052817571560137951281152"),
bigreal("1684996666696914987166688442938726917102321526408785780068975640576"),
bigreal("842498333348457493583344221469363458551160763204392890034487820288"),
bigreal("421249166674228746791672110734681729275580381602196445017243910144"),
bigreal("210624583337114373395836055367340864637790190801098222508621955072"),
bigreal("105312291668557186697918027683670432318895095400549111254310977536"),
bigreal("52656145834278593348959013841835216159447547700274555627155488768"),
bigreal("26328072917139296674479506920917608079723773850137277813577744384"),
bigreal("13164036458569648337239753460458804039861886925068638906788872192"),
bigreal("6582018229284824168619876730229402019930943462534319453394436096"),
bigreal("3291009114642412084309938365114701009965471731267159726697218048"),
bigreal("1645504557321206042154969182557350504982735865633579863348609024"),
bigreal("822752278660603021077484591278675252491367932816789931674304512"),
bigreal("411376139330301510538742295639337626245683966408394965837152256"),
bigreal("205688069665150755269371147819668813122841983204197482918576128"),
bigreal("102844034832575377634685573909834406561420991602098741459288064"),
bigreal("51422017416287688817342786954917203280710495801049370729644032"),
bigreal("25711008708143844408671393477458601640355247900524685364822016"),
bigreal("12855504354071922204335696738729300820177623950262342682411008"),
bigreal("6427752177035961102167848369364650410088811975131171341205504"),
bigreal("3213876088517980551083924184682325205044405987565585670602752"),
bigreal("1606938044258990275541962092341162602522202993782792835301376"),
bigreal("803469022129495137770981046170581301261101496891396417650688"),
bigreal("401734511064747568885490523085290650630550748445698208825344"),
bigreal("200867255532373784442745261542645325315275374222849104412672"),
bigreal("100433627766186892221372630771322662657637687111424552206336"),
bigreal("50216813883093446110686315385661331328818843555712276103168"),
bigreal("25108406941546723055343157692830665664409421777856138051584"),
bigreal("12554203470773361527671578846415332832204710888928069025792"),
bigreal("6277101735386680763835789423207666416102355444464034512896"),
bigreal("3138550867693340381917894711603833208051177722232017256448"),
bigreal("1569275433846670190958947355801916604025588861116008628224"),
bigreal("784637716923335095479473677900958302012794430558004314112"),
bigreal("392318858461667547739736838950479151006397215279002157056"),
bigreal("196159429230833773869868419475239575503198607639501078528"),
bigreal("98079714615416886934934209737619787751599303819750539264"),
bigreal("49039857307708443467467104868809893875799651909875269632"),
bigreal("24519928653854221733733552434404946937899825954937634816"),
bigreal("12259964326927110866866776217202473468949912977468817408"),
bigreal("6129982163463555433433388108601236734474956488734408704"),
bigreal("3064991081731777716716694054300618367237478244367204352"),
bigreal("1532495540865888858358347027150309183618739122183602176"),
bigreal("766247770432944429179173513575154591809369561091801088"),
bigreal("383123885216472214589586756787577295904684780545900544"),
bigreal("191561942608236107294793378393788647952342390272950272"),
bigreal("95780971304118053647396689196894323976171195136475136"),
bigreal("47890485652059026823698344598447161988085597568237568"),
bigreal("23945242826029513411849172299223580994042798784118784"),
bigreal("11972621413014756705924586149611790497021399392059392"),
bigreal("5986310706507378352962293074805895248510699696029696"),
bigreal("2993155353253689176481146537402947624255349848014848"),
bigreal("1496577676626844588240573268701473812127674924007424"),
bigreal("748288838313422294120286634350736906063837462003712"),
bigreal("374144419156711147060143317175368453031918731001856"),
bigreal("187072209578355573530071658587684226515959365500928"),
bigreal("93536104789177786765035829293842113257979682750464"),
bigreal("46768052394588893382517914646921056628989841375232"),
bigreal("23384026197294446691258957323460528314494920687616"),
bigreal("11692013098647223345629478661730264157247460343808"),
bigreal("5846006549323611672814739330865132078623730171904"),
bigreal("2923003274661805836407369665432566039311865085952"),
bigreal("1461501637330902918203684832716283019655932542976"),
bigreal("730750818665451459101842416358141509827966271488"),
bigreal("365375409332725729550921208179070754913983135744"),
bigreal("182687704666362864775460604089535377456991567872"),
bigreal("91343852333181432387730302044767688728495783936"),
bigreal("45671926166590716193865151022383844364247891968"),
bigreal("22835963083295358096932575511191922182123945984"),
bigreal("11417981541647679048466287755595961091061972992"),
bigreal("5708990770823839524233143877797980545530986496"),
bigreal("2854495385411919762116571938898990272765493248"),
bigreal("1427247692705959881058285969449495136382746624"),
bigreal("713623846352979940529142984724747568191373312"),
bigreal("356811923176489970264571492362373784095686656"),
bigreal("178405961588244985132285746181186892047843328"),
bigreal("89202980794122492566142873090593446023921664"),
bigreal("44601490397061246283071436545296723011960832"),
bigreal("22300745198530623141535718272648361505980416"),
bigreal("11150372599265311570767859136324180752990208"),
bigreal("5575186299632655785383929568162090376495104"),
bigreal("2787593149816327892691964784081045188247552"),
bigreal("1393796574908163946345982392040522594123776"),
bigreal("696898287454081973172991196020261297061888"),
bigreal("348449143727040986586495598010130648530944"),
bigreal("174224571863520493293247799005065324265472"),
bigreal("87112285931760246646623899502532662132736"),
bigreal("43556142965880123323311949751266331066368"),
bigreal("21778071482940061661655974875633165533184"),
bigreal("10889035741470030830827987437816582766592"),
bigreal("5444517870735015415413993718908291383296"),
bigreal("2722258935367507707706996859454145691648"),
bigreal("1361129467683753853853498429727072845824"),
bigreal("680564733841876926926749214863536422912"),
bigreal("340282366920938463463374607431768211456"),
bigreal("170141183460469231731687303715884105728"),
bigreal("85070591730234615865843651857942052864"),
bigreal("42535295865117307932921825928971026432"),
bigreal("21267647932558653966460912964485513216"),
bigreal("10633823966279326983230456482242756608"),
bigreal("5316911983139663491615228241121378304"),
bigreal("2658455991569831745807614120560689152"),
bigreal("1329227995784915872903807060280344576"),
bigreal("664613997892457936451903530140172288"),
bigreal("332306998946228968225951765070086144"),
bigreal("166153499473114484112975882535043072"),
bigreal("83076749736557242056487941267521536"),
bigreal("41538374868278621028243970633760768"),
bigreal("20769187434139310514121985316880384"),
bigreal("10384593717069655257060992658440192"),
bigreal("5192296858534827628530496329220096"),
bigreal("2596148429267413814265248164610048"),
bigreal("1298074214633706907132624082305024"),
bigreal("649037107316853453566312041152512"),
bigreal("324518553658426726783156020576256"),
bigreal("162259276829213363391578010288128"),
bigreal("81129638414606681695789005144064"),
bigreal("40564819207303340847894502572032"),
bigreal("20282409603651670423947251286016"),
bigreal("10141204801825835211973625643008"),
bigreal("5070602400912917605986812821504"),
bigreal("2535301200456458802993406410752"),
bigreal("1267650600228229401496703205376"),
bigreal("633825300114114700748351602688"),
bigreal("316912650057057350374175801344"),
bigreal("158456325028528675187087900672"),
bigreal("79228162514264337593543950336"),
bigreal("39614081257132168796771975168"),
bigreal("19807040628566084398385987584"),
bigreal("9903520314283042199192993792"),
bigreal("4951760157141521099596496896"),
bigreal("2475880078570760549798248448"),
bigreal("1237940039285380274899124224"),
bigreal("618970019642690137449562112"),
bigreal("309485009821345068724781056"),
bigreal("154742504910672534362390528"),
bigreal("77371252455336267181195264"),
bigreal("38685626227668133590597632"),
bigreal("19342813113834066795298816"),
bigreal("9671406556917033397649408"),
bigreal("4835703278458516698824704"),
bigreal("2417851639229258349412352"),
bigreal("1208925819614629174706176"),
bigreal("604462909807314587353088"),
bigreal("302231454903657293676544"),
bigreal("151115727451828646838272"),
bigreal("75557863725914323419136"),
bigreal("37778931862957161709568"),
bigreal("18889465931478580854784"),
bigreal("9444732965739290427392"),
bigreal("4722366482869645213696"),
bigreal("2361183241434822606848"),
bigreal("1180591620717411303424"),
bigreal("590295810358705651712"),
bigreal("295147905179352825856"),
bigreal("147573952589676412928"),
bigreal("73786976294838206464"),
bigreal("36893488147419103232"),
bigreal("18446744073709551616"),
bigreal("9223372036854775808"),
bigreal("4611686018427387904"),
bigreal("2305843009213693952"),
bigreal("1152921504606846976"),
bigreal("576460752303423488"),
bigreal("288230376151711744"),
bigreal("144115188075855872"),
bigreal("72057594037927936"),
bigreal("36028797018963968"),
bigreal("18014398509481984"),
bigreal("9007199254740992"),
bigreal("4503599627370496"),
bigreal("2251799813685248"),
bigreal("1125899906842624"),
bigreal("562949953421312"),
bigreal("281474976710656"),
bigreal("140737488355328"),
bigreal("70368744177664"),
bigreal("35184372088832"),
bigreal("17592186044416"),
bigreal("8796093022208"),
bigreal("4398046511104"),
bigreal("2199023255552"),
bigreal("1099511627776"),
bigreal("549755813888"),
bigreal("274877906944"),
bigreal("137438953472"),
bigreal("68719476736"),
bigreal("34359738368"),
bigreal("17179869184"),
bigreal("8589934592"),
bigreal("4294967296"),
bigreal("2147483648"),
bigreal("1073741824"),
bigreal("536870912"),
bigreal("268435456"),
bigreal("134217728"),
bigreal("67108864"),
bigreal("33554432"),
bigreal("16777216"),
bigreal("8388608"),
bigreal("4194304"),
bigreal("2097152"),
bigreal("1048576"),
bigreal("524288"),
bigreal("262144"),
bigreal("131072"),
bigreal("65536"),
bigreal("32768"),
bigreal("16384"),
bigreal("8192"),
bigreal("4096"),
bigreal("2048"),
bigreal("1024"),
bigreal("512"),
bigreal("256"),
bigreal("128"),
bigreal("64"),
bigreal("32"),
bigreal("16"),
bigreal("8"),
bigreal("4"),
bigreal("2"),
bigreal("1")};

inline const bigreal BCORDIC_INITIAL_POINT = bigreal("1568078817394601048806080038753005539711133864356845692065372493860529961587008327770473684623584700854219255354313121323");
//inline const bigreal BCORDIC_HYPERBOLIC_INITIAL_POINT = bigreal("3111963214676474978649458316964753154533127018950177047530272266819320151678197211270423813697952648523514190768305052941");
inline const bigreal BCORDIC_HYPERBOLIC_INITIAL_POINT = bigreal("3118059156021492604872641820284856918678104787087637232678698418132106164473349666687184977943571215309256847061853796332");

inline const bigreal BIG_2EX_BASE = bigreal("2582249878086908589655919172003011874329705792829223512830659356540647622016841194629645353280137831435903171972747493376");

inline const bigreal BIG_1_2EX_BASE = BIG_ONE / bigreal("2582249878086908589655919172003011874329705792829223512830659356540647622016841194629645353280137831435903171972747493376");
inline const bigint2 BCORDIC_BIN_INITIAL_POINT("1001101101110100111011011010100001000011010111100101101001100111111101011111100100001001001010111101011111111101010000001110100111000010100010001100010100011010001110111101100111110100010010011011010010000000000001001101011010101110001110101011111101011110011110001001100000111010001011110111101000111110111000100011100011110100111110010010111101111110111110010011111101001010000001111001111000101011");
//inline const bigint2 BCORDIC_BIN_HYPERBOLIC_INITIAL_POINT("10011010010000011110100001111111010111111100000100110011010101101100000111010110111101110110001001010000011100101110110110100100011010110100010110101001110011000011011010110110110110110001110011000100010010000111100001110101011101010000101101110010000010001000010000011111001100111011000001100100110110101001010100100101111111110011001100001111100000011010111011111111110101001111001111001110100001101");
inline const bigint2 BCORDIC_BIN_HYPERBOLIC_INITIAL_POINT("10011010100011110100001110010000000001110111011000010001100101001011001001010010011101100100011101010011111000011110111110011001011001100001100011001111011010001011001100000010100001110011100110011110101110001011101010100001001001001011011000101101010000111000000101100100010010011010010111000101101011101101101101011100110010010000010100001001111111111001100101001000010110010011110011111011111101100");
                                                         
inline const bigint2 BCORDIC_BIN_ARC_INITIAL_POINT("10011010100011110100001110010000000001110111011000010001100101001011001001010010011101100100011101010011111000011110111110011001011001100001100011001111011010001011001100000010100001110011100110011110101110001011101010100001001001001011011000101101010000111000000101100100010010011010010111000101101011101101101101011100110010010000010100001001111111111001100101001000010110010011110011111011111101100");

inline const bigreal BCORDIC_SQRTHYP_FAC("0.6072529350088812561694467525049282631123908521500897724569760131101478812084249069062274259080384052912557101255990470893063505986");
inline const bigreal BCORDIC_SQRTMHYP_FAC("1.207497067763072128877721011310915836812783221769813422179853981781836497527376983766650201845792320431394059171990813503534615899");
#endif
/**
 * @brief 0 in binary
 * 
 */
inline const bigint2 BIG_BIN_ZERO("0");
/**
 * @brief 1 in binary
 * 
 */
inline const bigint2 BIG_BIN_ONE("1");


/**
 * @brief If the cordic method should use binary for sin/cos. Binary works faster and has the same precision.
 * Default: true. Do not change it! [Reccomended]
 */
inline const bool BCORDIC_USEBINARY = true;
/**
 * @brief CORDIC algorithms
 * 
 */
inline namespace big{

    #ifndef BCORDIC_BASE_400
    /**
     * @brief 2^B CAU = 90deg = pi; 
     * 2^B CFU = 1 (for sin)
     * 
     * 
     * @param angleCAU 
     * @param sinCFU 
     * @param cosCFU 
     * @return bigreal 
     */
    inline void dec_calc_CAU_sincos(bigreal angleCAU, bigreal& sinCFU, bigreal& cosCFU){
        bigreal x = BCORDIC_INITIAL_POINT;
        bigreal y = BIG_ZERO, s = BIG_ZERO;
        bigreal x1 = x;
        bigreal y1 = y;
        int _each[600] = {0};
        for(int it = 0; it< BCORDIC_BASE; ++it){
            bigreal currangle = BCORDIC_ATAN[it];
            BNint y2it("0"), x2it("0"), twopow("0");
            y2it = y.integerPart;
            twopow = BIG_POWERSOF2[it].integerPart;
            y2it = y2it / twopow;
            bigreal y2it_f("0");
            y2it_f.integerPart = y2it;
            y2it_f.decimalPoint = 0;
            y2it_f.isNegative = false;

            x2it = x.integerPart;
            x2it = x2it / twopow;
            bigreal x2it_f("0");
            x2it_f.integerPart = x2it;
            x2it_f.decimalPoint = 0;
            x2it_f.isNegative = false;

            if(angleCAU == s){
                /**Default  CCW*/
                _each[it] = 1;
                s = s + currangle;
                x1 = x - y2it_f;
                y1 = y + x2it_f;
            }
            else if(angleCAU > s){
                /**CCW*/
                _each[it] = 1;
                s = s + currangle;
                x1 = x - y2it_f;
                y1 = y + x2it_f;
            } else {
                /**CW*/
                _each[it] = -1;
                s = s - currangle;
                x1 = x + y2it_f;
                y1 = y - x2it_f;
            }
            x = x1;
            y = y1;
        }
        cosCFU = x;
        sinCFU = y;
    }
    #endif

    inline void bin_calc_CAU_sincos(bigreal angleCAU, bigint2& sinCFU, bigint2& cosCFU){
        bigint2 x = BCORDIC_BIN_INITIAL_POINT;
        bigint2 y = BIG_BIN_ZERO;
        bigreal s = BIG_ZERO;
        bigint2 x1 = x;
        bigint2 y1 = y;
        int _each[600] = {0};
        for(int it = 0; it< BCORDIC_BASE; ++it){
            bigreal currangle = BCORDIC_ATAN[it];
            
            if(angleCAU == s){
                /**Default  CCW*/ 
                _each[it] = 1;
                s = s + currangle;
                x1 = x - (y>>it);
                y1 = y + (x>>it);
            }
            else if(angleCAU > s){
                /**CCW*/ 

                _each[it] = 1;
                s = s + currangle;
                x1 = x - (y>>it);
                y1 = y + (x>>it);
            } else {
                /**CW*/ 

                _each[it] = -1;
                s = s - currangle;
                x1 = x + (y>>it);
                y1 = y - (x>>it);
            } 
            x = x1;
            y = y1;
            

            
        } 
        cosCFU = x;
        sinCFU = y;
    }

    inline void bin_calc_sincosQ1(bigreal angleRad, bigreal& out_sin, bigreal& out_cos){
        if(angleRad == BIG_ZERO){
            out_sin = bigreal("0");
            out_cos = bigreal("1");
            return;
        }
        bigint2 m_s, m_c;
        bigreal a_cau;
        #ifdef BCORDIC_BASE_400
        a_cau = big::floor(angleRad * BIG_1_PI * BIG_2EX_BASE * bigreal("2"));
        #endif
        #ifndef BCORDIC_BASE_400
        a_cau = big::floor(angleRad * BIG_1_PI * BIG_POWERSOF2[BCORDIC_BASE] * bigreal("2"));
        #endif 
        bin_calc_CAU_sincos(a_cau, m_s, m_c);
        bigreal t = BIG_1_2EX_BASE;
        bigreal d_s = big::to_decimal(m_s);
        bigreal d_c = big::to_decimal(m_c);
        out_sin = d_s*t;
        out_cos = d_c*t;
    }
    inline void bin_calc_sincos(bigreal angleRad, bigreal& out_sin, bigreal& out_cos){
        if(angleRad == BIG_ZERO){
            out_sin = bigreal("0");
            out_cos = bigreal("1");
            return;
        }
        bigreal q = big::floor(angleRad * BIG_1_PI * BIG_HALF);
        bigreal rem = angleRad - q*BIG_2_PI;
        bigreal sgn_s("1"), sgn_c("1"), sgn("1");
        if(rem > BIG_PI){
            rem = rem - BIG_PI;
            sgn = bigreal("-1");
        }
        if(rem > BIG_PI_2){
            rem = BIG_PI - rem;
            sgn_c = bigreal("-1");
        }
        if(rem.isNegative){
            rem.isNegative = false;
            sgn_s = bigreal("-1");
        }
        bigreal a_c, a_s;
        bin_calc_sincosQ1(rem, a_s, a_c);
        bigreal _s = sgn*sgn_s * a_s;
        bigreal _c = sgn*sgn_c*a_c;
        
        out_sin = _s;
        out_cos = _c;
        

    }
    #ifndef BCORDIC_BASE_400
    inline void dec_calc_sincosQ1(bigreal angleRad, bigreal& out_sin, bigreal& out_cos){
        if(angleRad == BIG_ZERO){
            out_sin = bigreal("0");
            out_cos = bigreal("1");
            return;
        }
        bigreal m_s, m_c, a_cau;
        a_cau = big::floor(angleRad * BIG_1_PI * BIG_POWERSOF2[BCORDIC_BASE] * bigreal("2"));
        dec_calc_CAU_sincos(a_cau, m_s, m_c);
        bigreal t = BIG_1_2EX_BASE;
        out_sin = m_s * t;
        out_cos = m_c * t;
    }

    inline void dec_calc_sincos(bigreal angleRad, bigreal& out_sin, bigreal& out_cos){
        if(angleRad == BIG_ZERO){
            out_sin = bigreal("0");
            out_cos = bigreal("1");
            return;
        }
        bigreal q = big::floor(angleRad * BIG_1_PI * BIG_HALF);
        bigreal rem = angleRad - q*BIG_2_PI;
        bigreal sgn_s("1"), sgn_c("1"), sgn("1");
        if(rem > BIG_PI){
            rem = rem - BIG_PI;
            sgn = bigreal("-1");
        }
        if(rem > BIG_PI_2){
            rem = BIG_PI - rem;
            sgn_c = bigreal("-1");
        }
        if(rem.isNegative){
            rem.isNegative = false;
            sgn_s = bigreal("-1");
        }
        bigreal a_c, a_s;
        dec_calc_sincosQ1(rem, a_s, a_c);
        bigreal _s = sgn*sgn_s * a_s;
        bigreal _c = sgn*sgn_c*a_c;
        
        out_sin = _s;
        out_cos = _c;
    }
    #endif
    /**
     * @brief Calculates sin and cos using cordic method. Works for all angles.
     * 
     * @param angleRad 
     * @param out_sin 
     * @param out_cos 
     */
    inline void calc_sincos(bigreal angleRad, bigreal& out_sin, bigreal& out_cos){
        if(angleRad == BIG_ZERO){
            out_sin = bigreal("0");
            out_cos = bigreal("1");
            return;
        }
        if(BCORDIC_USEBINARY)
            bin_calc_sincos(angleRad, out_sin, out_cos);
        #ifndef BCORDIC_BASE_400
        else 
            dec_calc_sincos(angleRad, out_sin, out_cos);
        #endif
    }







    inline void bin_calc_CAU_sinhcosh(bigreal angleCAU, bigint2& sinhCFU, bigint2& coshCFU){
        bigint2 x = BCORDIC_BIN_HYPERBOLIC_INITIAL_POINT;
        bigint2 y = BIG_BIN_ZERO;
        bigreal s = BIG_ZERO;
        bigint2 x1 = x;
        bigint2 y1 = y;
        bool sw = false;
        for(int it = 1; it<=BCORDIC_BASE; ++it){
            bigreal currangle = BCORDIC_ATANH[it];
            

            if(angleCAU == s){
                /**Default  CCW*/
                s = s + currangle;
                x1 = x + (y>>it);
                y1 = y + (x>>it);
            }
            else if(angleCAU > s){
                /**CCW*/
                s = s + currangle;
                x1 = x + (y>>it);
                y1 = y + (x>>it);
            } else {
                /**CW*/
                s = s - currangle;
                x1 = x - (y>>it);
                y1 = y - (x>>it);
            }
            x = x1;
            y = y1;
            if(it==4 || it == 13 || it==40 || it == 121 || it==364){
                if(!sw){
                    --it;
                    sw = true;
                }
            }
            if(it==5 || it == 14 || it==44 || it == 124 || it==367){
                sw = false;
            } // - add to sinh cosh
        }
        coshCFU = x;
        sinhCFU = y;

        
        
    }
    /**
     * @brief Calculates sinh and cosh, but only works with numbers between 0 and 1.118.
     * TODO: add the extra iters
     * @param angleRad 
     * @param out_sinh 
     * @param out_cosh 
     */
    inline void calc_sinhcosh(bigreal angleRad, bigreal& out_sinh, bigreal& out_cosh){
        if(angleRad == BIG_ZERO){
            out_sinh = bigreal("0");
            out_cosh = bigreal("1");
            return;
        }
        bigint2 m_s, m_c;
        bigreal a_cau;
        #ifndef BCORDIC_BASE_400
        a_cau = big::floor(angleRad * BIG_POWERSOF2[BCORDIC_BASE] );
        #else
        a_cau = big::floor(angleRad * BIG_2EX_BASE);

        #endif
        bin_calc_CAU_sinhcosh(a_cau, m_s, m_c);
        bigreal t = BIG_1_2EX_BASE;
        bigreal d_s = big::to_decimal(m_s);
        bigreal d_c = big::to_decimal(m_c);
        out_sinh = d_s*t;
        out_cosh = d_c*t;
    }

    inline void calc_CAU_arctan(bigreal valCAU, bigreal& out_atandeg, bigreal& out_hyp){
        
        bigint2 x = BIG_BIN_ONE<<BCORDIC_BASE; //TODO: X is not correctly initialised
        bigint2 y = big::to_binary(valCAU); // 1 is 2^BASE
        bigreal _x = big::to_decimal(x);
        bigreal _y = big::to_decimal(y);
        bigint2 x1 = x;
        bigint2 y1 = y;

        bigreal z = BIG_ZERO;
        bigreal z1 = z;
        for(int i=0; i<=BCORDIC_BASE; ++i){
            if(!y.isNegative){
                //std::cout<<"\nNEG\ni:"<<i<<"\ny:"<<y<<"\nx:"<<x<<"\n\n";
                x1 = x + (y>>i);
                y1 = y - (x>>i);
                z1 = z + BCORDIC_ATAN[i]; 
            } else {
                //std::cout<<"\nPOZ\ni:"<<i<<"\ny:"<<y<<"\nx:"<<x<<"\n\n";

                x1 = x - (y>>i);
                y1 = y + (x>>i);
                z1 = z - BCORDIC_ATAN[i]; 
                
            }
            x = x1;
            y = y1;
            z = z1;
        }
        out_atandeg = z1;
        out_hyp = big::to_decimal(x1);
        //std::cout<<"\nxxyyy\n"<<big::to_decimal(x1)*BIG_1_2EX_BASE<<"\n"<<big::to_decimal(y1)<<"\n";
    }
    /**
     * @brief Works between -inf, inf
     * 
     * @param val 
     * @param out_atan 
     */
    inline void calc_arctan(bigreal val, bigreal& out_atan, bigreal& out_hyp){
        int t=0;
        if(val.isNegative){
            bigreal v;
            calc_arctan(val.abs(), v, out_hyp);
            v.isNegative = !v.isNegative;
            out_atan = v;
            return;  
        }
        bigreal _val;
        if(val > bigreal("1.4")){
            _val = val;
            val = BIG_ONE/val;
            t=1;

        }
        
        bigreal a_cau;
        #ifdef BCORDIC_BASE_400
        a_cau = big::floor(val * BIG_2EX_BASE );
        #endif
        #ifndef BCORDIC_BASE_400
        a_cau = big::floor(val  * BIG_POWERSOF2[BCORDIC_BASE]);
        #endif

        bigreal _atan, _hyp;
    
        big::calc_CAU_arctan(a_cau, _atan,  _hyp);
        out_atan = _atan;
        out_atan =_atan * BIG_1_2EX_BASE * BIG_PI * BIG_HALF;
        out_hyp = _hyp*BCORDIC_SQRTHYP_FAC*BIG_1_2EX_BASE;
        if(t==1){
            out_atan = BIG_PI_2 - out_atan;
            out_hyp = out_hyp * _val;

        }
        

    }

    
    inline void calc_CAU_arctanh(bigreal valCAU, bigreal& out_atanhdeg, bigreal& out_hyp){
        
        bigint2 x = BIG_BIN_ONE<<BCORDIC_BASE; //TODO: X is not correctly initialised
        bigint2 y = big::to_binary(valCAU); // 1 is 2^BASE
        bigreal _x = big::to_decimal(x);
        bigreal _y = big::to_decimal(y);
        bigint2 x1 = x;
        bigint2 y1 = y;

        bigreal z = BIG_ZERO;
        bigreal z1 = z;
        bool sw = false;
        for(int i=1; i<=BCORDIC_BASE; ++i){
            if(!y.isNegative){
                //std::cout<<"\nNEG\ni:"<<i<<"\ny:"<<y<<"\nx:"<<x<<"\n\n";
                x1 = x - (y>>i);
                y1 = y - (x>>i);
                z1 = z + BCORDIC_ATANH[i]; 
            } else {
                //std::cout<<"\nPOZ\ni:"<<i<<"\ny:"<<y<<"\nx:"<<x<<"\n\n";

                x1 = x + (y>>i);
                y1 = y + (x>>i);
                z1 = z - BCORDIC_ATANH[i]; 
                
            }
            x = x1;
            y = y1;
            z = z1;
            if(i==4 || i == 13 || i==40 || i ==121|| i==364){
                if(!sw){
                    --i;
                    sw = true;
                }
            }
            if(i==5 || i == 14 || i==44 || i ==124|| i==367){
                sw = false;
            }
        }
        out_atanhdeg = z1;
        out_hyp = big::to_decimal(x1);
        //std::cout<<"\nxxyyy\n"<<big::to_decimal(x1)*BIG_1_2EX_BASE<<"\n"<<big::to_decimal(y1)<<"\n";
    }
    /**
     * @brief Works between 0, 0.806
     * 
     * @param val 
     * @param out_atan 
     */
    inline void calc_arctanh(bigreal val, bigreal& out_atanh, bigreal& out_hyp){
        int t=0;
        if(val.isNegative){
            bigreal v;
            calc_arctan(val.abs(), v, out_hyp);
            v.isNegative = !v.isNegative;
            out_atanh = v;
            return;  
        }
        
        
        bigreal a_cau;
        #ifdef BCORDIC_BASE_400
        a_cau = big::floor(val * BIG_2EX_BASE );
        #endif
        #ifndef BCORDIC_BASE_400
        a_cau = big::floor(val  * BIG_POWERSOF2[BCORDIC_BASE]);
        #endif

        bigreal _atan, _hyp;
    
        big::calc_CAU_arctanh(a_cau, _atan,  _hyp);
        out_atanh = _atan;
        out_atanh =_atan * BIG_1_2EX_BASE;
        out_hyp = _hyp*BCORDIC_SQRTMHYP_FAC*BIG_1_2EX_BASE;
        
        

    }



 

    
    inline void calc_CAU_lnsqrt(bigreal valCAU, bigreal& out_ln, bigreal& out_sqrt){
        bigint2 __vc = big::to_binary(valCAU);
        bigint2 x = __vc + (BIG_BIN_ONE<<BCORDIC_BASE); //TODO: X is not correctly initialised
        bigint2 y = __vc - (BIG_BIN_ONE<<BCORDIC_BASE); // 1 is 2^BASE
        bigint2 x1 = x;
        bigint2 y1 = y;

        bigreal z = BIG_ZERO;
        bigreal z1 = z;
        bool sw = false;
        for(int i=1; i<=BCORDIC_BASE; ++i){
            if(!y.isNegative){
                //std::cout<<"\nNEG\ni:"<<i<<"\ny:"<<y<<"\nx:"<<x<<"\n\n";
                x1 = x - (y>>i);
                y1 = y - (x>>i);
                z1 = z + BCORDIC_ATANH[i]; 
            } else {
                //std::cout<<"\nPOZ\ni:"<<i<<"\ny:"<<y<<"\nx:"<<x<<"\n\n";

                x1 = x + (y>>i);
                y1 = y + (x>>i);
                z1 = z - BCORDIC_ATANH[i]; 
                
            }
            x = x1;
            y = y1;
            z = z1;
            if(i==4 || i == 13 || i==40 || i == 121 || i==364){
                if(!sw){
                    --i;
                    sw = true;
                }
            }
            if(i==5 || i == 14 || i==44 || i == 124 || i==367){
                sw = false;
            } // - add to sinh cosh
        }
        out_ln = z1*BIG_2;
        out_sqrt = big::to_decimal(x1)*BIG_HALF;
        //std::cout<<"\nxxyyy\n"<<big::to_decimal(x1)*BIG_1_2EX_BASE<<"\n"<<big::to_decimal(y1)<<"\n";
    }
    /**
     * @brief Works between 0.106, 9.35
     * 
     * @param val 
     * @param out_atan 
     */
    inline void calc_lnsqrt(bigreal val, bigreal& out_ln, bigreal& out_sqrt){
        int t=0;
        if(val.isNegative){
            throw("Negative value provided in lnsqrt function!");
            return;  
        }
        
        
        bigreal a_cau;
        #ifdef BCORDIC_BASE_400
        a_cau = big::floor(val * BIG_2EX_BASE );
        #endif
        #ifndef BCORDIC_BASE_400
        a_cau = big::floor(val  * BIG_POWERSOF2[BCORDIC_BASE]);
        #endif

        bigreal _ln, _sqrt;
    
        big::calc_CAU_lnsqrt(a_cau, _ln,  _sqrt);
        out_ln =_ln * BIG_1_2EX_BASE;
        out_sqrt = _sqrt*BCORDIC_SQRTMHYP_FAC*BIG_1_2EX_BASE;
    }


    inline bigreal exp(bigreal __n){

        if(__n.isNegative){
            return BIG_ONE/big::exp(__n.abs()).roundToDecimal(BN_DEC_INVEXPPRECISION);
        }
        bigreal floor_ = big::floor(__n);
        bigreal frac = __n - floor_;
        bigreal ex_frac, sinh_frac, cosh_frac;
        big::calc_sinhcosh(frac, sinh_frac, cosh_frac);
        ex_frac = sinh_frac + cosh_frac;

        bigreal pown_ = brute::pown(BIG_E, floor_);
        return pown_ * ex_frac;
    }

    inline bigreal ln(bigreal __n){
        big::clean(__n);
        int decP = __n.decimalPoint;
        int nlen = __n.integerPart.cvalue.size();
        int pos = 0-(nlen - 1 - decP);
        // n = 10^-decP * intpart = 10^-pos*[1,10]
        bigreal __reduced = __n;
        __reduced.decimalPoint = decP - pos;
        int dp=0;
        while (__reduced < bigreal("1"))
        {
            __reduced = __reduced*bigreal("10");
            dp++;
        }
        int pow10 = -(pos+dp);
        if(__reduced > bigreal("9")){
            __reduced = __reduced*bigreal("0.1");
            pow10++;
        }
        // __n = __reduced * 10^pow10, where __reduced is between [0.9, 9]
        bigreal o_ln, o_sq;
        big::calc_lnsqrt(__reduced, o_ln, o_sq);

        return (o_ln + bigreal(std::to_string(pow10)) * BIG_LN10);

    }

    inline bigreal pow(bigreal a, bigreal b){
        if(!b.isNegative){
            bigreal flb = big::floor(b);
            bigreal frb = (b - flb);
            if(flb == b){
                return brute::pown(a, flb);
            }
            return big::exp((frb * big::ln(a))).roundToDecimal(FLOATING_POINT_DEC_PREC) * brute::pown(a, flb);
        }
        return big::exp(b * big::ln(a));
    }

    inline bigreal sin(bigreal a){
        bigreal __resin, __recos;
        big::calc_sincos(a, __resin, __recos);
        return __resin;
    }

    inline bigreal cos(bigreal a){
        bigreal __resin, __recos;
        big::calc_sincos(a, __resin, __recos);
        return __recos;
    }
}     
#endif